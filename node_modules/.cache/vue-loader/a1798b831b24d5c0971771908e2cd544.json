{"remainingRequest":"/home/mmoallemi/PycharmProjects/tedx/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/mmoallemi/PycharmProjects/tedx/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mmoallemi/PycharmProjects/tedx/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mmoallemi/PycharmProjects/tedx/src/views/Nominate.vue?vue&type=template&id=5e6efdbb&","dependencies":[{"path":"/home/mmoallemi/PycharmProjects/tedx/src/views/Nominate.vue","mtime":1564414925000},{"path":"/home/mmoallemi/PycharmProjects/tedx/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mmoallemi/PycharmProjects/tedx/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/mmoallemi/PycharmProjects/tedx/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mmoallemi/PycharmProjects/tedx/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"col\" }, [\n    _c(\"section\", [\n      _c(\"div\", { staticClass: \"register-field-lg\" }, [\n        _c(\"div\", { staticClass: \"register-field-sm\" }, [\n          _c(\"img\", {\n            attrs: { src: require(\"../assets/images/picture.png\"), alt: \"Beta\" }\n          }),\n          _c(\n            \"form\",\n            {\n              attrs: { id: \"nomination-form\", method: \"POST\" },\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.submitForm($event)\n                }\n              }\n            },\n            [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.newSpeaker.first_name,\n                    expression: \"newSpeaker.first_name\"\n                  }\n                ],\n                staticClass: \"nomination-input\",\n                attrs: {\n                  type: \"text\",\n                  name: \"first_name\",\n                  placeholder: \"First Name\",\n                  maxlength: \"30\",\n                  required: \"\",\n                  id: \"id_first_name\"\n                },\n                domProps: { value: _vm.newSpeaker.first_name },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.newSpeaker, \"first_name\", $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.newSpeaker.last_name,\n                    expression: \"newSpeaker.last_name\"\n                  }\n                ],\n                staticClass: \"nomination-input\",\n                attrs: {\n                  type: \"text\",\n                  name: \"last_name\",\n                  placeholder: \"Last Name\",\n                  maxlength: \"30\",\n                  required: \"\",\n                  id: \"id_last_name\"\n                },\n                domProps: { value: _vm.newSpeaker.last_name },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.newSpeaker, \"last_name\", $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.newSpeaker.email,\n                    expression: \"newSpeaker.email\"\n                  }\n                ],\n                staticClass: \"nomination-input\",\n                attrs: {\n                  type: \"email\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  required: \"\",\n                  id: \"id_email\"\n                },\n                domProps: { value: _vm.newSpeaker.email },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.newSpeaker, \"email\", $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.newSpeaker.phone_number,\n                    expression: \"newSpeaker.phone_number\"\n                  }\n                ],\n                staticClass: \"nomination-input\",\n                attrs: {\n                  type: \"tel\",\n                  name: \"phone_number\",\n                  placeholder: \"Phone Number\",\n                  required: \"\",\n                  id: \"id_phone_number\"\n                },\n                domProps: { value: _vm.newSpeaker.phone_number },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.newSpeaker,\n                      \"phone_number\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _c(\"textarea\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.newSpeaker.bio,\n                    expression: \"newSpeaker.bio\"\n                  }\n                ],\n                attrs: {\n                  name: \"biography\",\n                  cols: \"40\",\n                  rows: \"10\",\n                  maxlength: \"500\",\n                  required: \"\",\n                  id: \"id_biography\"\n                },\n                domProps: { value: _vm.newSpeaker.bio },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.newSpeaker, \"bio\", $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", { attrs: { type: \"submit\", value: \"SUBMIT\" } }),\n              _c(\"div\", {\n                class: {\n                  alert: _vm.formMessage.length,\n                  \"alert-gold\": _vm.formSuccess,\n                  \"alert-error\": _vm.formError\n                },\n                attrs: { id: \"results\" },\n                domProps: { innerHTML: _vm._s(_vm.formMessage) }\n              })\n            ]\n          )\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}